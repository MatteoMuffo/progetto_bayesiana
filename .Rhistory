summary(pc.myfile)
load.myfile    <- pc.myfile$loadings
load.myfile
x11()
par(mar = c(1,4,0,2), mfrow = c(5,1))
for(i in 1:5)barplot(load.myfile[,i], ylim = c(-1, 1))
#sembra che prima component: thickness e cup, seconda: rim e rnfl
#PROVA PCA
ST_data=cbind(
RNFL_average ,
#RNFL_cross_sectinal_area,
#RNFL_thickness_superior,
#RNFL_thickness_inferior,
#RNFL_thickness_nasal,
#RNFL_thickness_temporal,
#OCT_RNFL_Signal_Strength,
mean_RNFL_thickness,
Rim_area,
#RimArea,
rim_volume,
linear_cup_disc_ratio,
time)
head(ST_data)
#tolgo tempi "strani"
ST_data=ST_data[-c(209,210,211),]
ST_data=data.frame(ST_data)
tmin=min(ST_data$time)
tmax=max(ST_data$time)
n=10
time_int=c(0:n)/n*tmax
mSTdata=NULL
for (i in 2:(n+1))
{
mSTdata=rbind (mSTdata, colMeans( ST_data[   ST_data$time>=time_int[i-1] &  ST_data$time<time_int[i] , ]     , na.rm=TRUE)   )
}
#mSTdata
mSTdata=data.frame(mSTdata)
p <- ggplot(data = mSTdata, aes(x = time, y = RNFL_average  )  )
p +    geom_line(  ) +
geom_point() +
geom_smooth(method = lm)
p2 <- ggplot(data = mSTdata, aes(x = time, y = Rim_area  )  )
p2 +    geom_line(  ) +
geom_point() +
geom_smooth(method = lm)
myfile.sd <- scale(mSTdata[,1:5])  #standardizzo i dati e faccio pca su questa
myfile.sd <- data.frame(myfile.sd)
pc.myfile <- princomp(myfile.sd, scores=T)
summary(pc.myfile)
load.myfile    <- pc.myfile$loadings
load.myfile
x11()
par(mar = c(1,4,0,2), mfrow = c(5,1))
for(i in 1:5)barplot(load.myfile[,i], ylim = c(-1, 1))
#sembra che prima component: thickness e cup, seconda: rim e rnfl
#PROVA PCA
ST_data=cbind(
RNFL_average ,
#RNFL_cross_sectinal_area,
#RNFL_thickness_superior,
#RNFL_thickness_inferior,
#RNFL_thickness_nasal,
#RNFL_thickness_temporal,
#OCT_RNFL_Signal_Strength,
mean_RNFL_thickness,
Rim_area,
#RimArea,
rim_volume,
linear_cup_disc_ratio,
time)
head(ST_data)
#tolgo tempi "strani"
ST_data=ST_data[-c(209,210,211),]
ST_data=data.frame(ST_data)
tmin=min(ST_data$time)
tmax=max(ST_data$time)
n=10
time_int=c(0:n)/n*tmax
mSTdata=NULL
for (i in 2:(n+1))
{
mSTdata=rbind (mSTdata, colMeans( ST_data[   ST_data$time>=time_int[i-1] &  ST_data$time<time_int[i] , ]     , na.rm=TRUE)   )
}
#mSTdata
mSTdata=data.frame(mSTdata)
p <- ggplot(data = mSTdata, aes(x = time, y = RNFL_average  )  )
p +    geom_line(  ) +
geom_point() +
geom_smooth(method = lm)
p2 <- ggplot(data = mSTdata, aes(x = time, y = Rim_area  )  )
p2 +    geom_line(  ) +
geom_point() +
geom_smooth(method = lm)
myfile.sd <- scale(mSTdata[,1:5])  #standardizzo i dati e faccio pca su questa
myfile.sd <- data.frame(myfile.sd)
pc.myfile <- princomp(myfile.sd, scores=T)
summary(pc.myfile)
load.myfile    <- pc.myfile$loadings
load.myfile
par(mar = c(1,4,0,2), mfrow = c(5,1))
for(i in 1:5)barplot(load.myfile[,i], ylim = c(-1, 1))
#sembra che prima component: thickness e cup, seconda: rim e rnfl
#PROVA PCA
ST_data=cbind(
RNFL_average ,
#RNFL_cross_sectinal_area,
#RNFL_thickness_superior,
#RNFL_thickness_inferior,
#RNFL_thickness_nasal,
#RNFL_thickness_temporal,
#OCT_RNFL_Signal_Strength,
mean_RNFL_thickness,
Rim_area,
#RimArea,
rim_volume,
linear_cup_disc_ratio,
time)
head(ST_data)
#tolgo tempi "strani"
ST_data=ST_data[-c(209,210,211),]
ST_data=data.frame(ST_data)
tmin=min(ST_data$time)
tmax=max(ST_data$time)
n=10
time_int=c(0:n)/n*tmax
mSTdata=NULL
for (i in 2:(n+1))
{
mSTdata=rbind (mSTdata, colMeans( ST_data[   ST_data$time>=time_int[i-1] &  ST_data$time<time_int[i] , ]     , na.rm=TRUE)   )
}
#mSTdata
mSTdata=data.frame(mSTdata)
p <- ggplot(data = mSTdata, aes(x = time, y = RNFL_average  )  )
p +    geom_line(  ) +
geom_point() +
geom_smooth(method = lm)
p2 <- ggplot(data = mSTdata, aes(x = time, y = Rim_area  )  )
p2 +    geom_line(  ) +
geom_point() +
geom_smooth(method = lm)
myfile.sd <- scale(mSTdata[,1:5])  #standardizzo i dati e faccio pca su questa
myfile.sd <- data.frame(myfile.sd)
pc.myfile <- princomp(myfile.sd, scores=T)
summary(pc.myfile)
load.myfile    <- pc.myfile$loadings
load.myfile
par(mar = c(1,4,0,2), mfrow = c(5,1))
for(i in 1:5)barplot(load.myfile[,i], ylim = c(-1, 1))
#sembra che prima component: thickness e cup, seconda: rim e rnfl
par(mar = c(1,4,0,2), mfrow = c(5,1))
for(i in 1:5)barplot(load.myfile[,i], ylim = c(-1, 1))
#PROVA PCA
ST_data=cbind(
RNFL_average ,
#RNFL_cross_sectinal_area,
#RNFL_thickness_superior,
#RNFL_thickness_inferior,
#RNFL_thickness_nasal,
#RNFL_thickness_temporal,
#OCT_RNFL_Signal_Strength,
mean_RNFL_thickness,
Rim_area,
#RimArea,
rim_volume,
linear_cup_disc_ratio,
time)
head(ST_data)
#tolgo tempi "strani"
ST_data=ST_data[-c(209,210,211),]
ST_data=data.frame(ST_data)
tmin=min(ST_data$time)
tmax=max(ST_data$time)
n=10
time_int=c(0:n)/n*tmax
mSTdata=NULL
for (i in 2:(n+1))
{
mSTdata=rbind (mSTdata, colMeans( ST_data[   ST_data$time>=time_int[i-1] &  ST_data$time<time_int[i] , ]     , na.rm=TRUE)   )
}
#mSTdata
mSTdata=data.frame(mSTdata)
p <- ggplot(data = mSTdata, aes(x = time, y = RNFL_average  )  )
p +    geom_line(  ) +
geom_point() +
geom_smooth(method = lm)
p2 <- ggplot(data = mSTdata, aes(x = time, y = Rim_area  )  )
p2 +    geom_line(  ) +
geom_point() +
geom_smooth(method = lm)
myfile.sd <- scale(mSTdata[,1:5])  #standardizzo i dati e faccio pca su questa
myfile.sd <- data.frame(myfile.sd)
pc.myfile <- princomp(myfile.sd, scores=T)
summary(pc.myfile)
load.myfile    <- pc.myfile$loadings
load.myfile
par(mar = c(1,4,0,2), mfrow = c(5,1))
for(i in 1:5)barplot(load.myfile[,i], ylim = c(-1, 1))
#sembra che prima component: thickness e cup, seconda: rim e rnfl
par(mar = c(1,4,0,2), mfrow = c(5,1))
for(i in 1:5)barplot(load.myfile[,i], ylim = c(-1, 1))
myfile.sd <- mSTdata[,1:5]
myfile.sd <- data.frame(myfile.sd)
pc.myfile <- princomp(myfile.sd, scores=T)
summary(pc.myfile)
load.myfile    <- pc.myfile$loadings
load.myfile
par(mar = c(1,4,0,2), mfrow = c(5,1))
for(i in 1:5)barplot(load.myfile[,i], ylim = c(-1, 1))
par(mar = c(1,4,0,2), mfrow = c(5,1))
for(i in 1:5)barplot(load.myfile[,i], ylim = c(-1, 1))
p +    geom_line(  ) +
geom_point() +
geom_smooth(method = lm)
n=3
time_int=c(0:n)/n*tmax
mSTdata=NULL
for (i in 2:(n+1))
{
mSTdata=rbind (mSTdata, colMeans( ST_data[   ST_data$time>=time_int[i-1] &  ST_data$time<time_int[i] , ]     , na.rm=TRUE)   )
}
mSTdata=data.frame(mSTdata)
p <- ggplot(data = mSTdata, aes(x = time, y = RNFL_average  )  )
p +    geom_line(  ) +
geom_point() +
geom_smooth(method = lm)
n=8
time_int=c(0:n)/n*tmax
mSTdata=NULL
for (i in 2:(n+1))
{
mSTdata=rbind (mSTdata, colMeans( ST_data[   ST_data$time>=time_int[i-1] &  ST_data$time<time_int[i] , ]     , na.rm=TRUE)   )
}
mSTdata=data.frame(mSTdata)
p <- ggplot(data = mSTdata, aes(x = time, y = RNFL_average  )  )
p +    geom_line(  ) +
geom_point() +
geom_smooth(method = lm)
###### Proviamo a "visualizzare" un unico paziente
Paz=590
Gdata_paz=Gdata[Patient==Paz,]
dim(Gdata_paz)
#qualche variabile:
Gdata_paz$yearofglaucoma
Gdata_paz$Color
Gdata_paz$Periph
Gdata_paz$Visit
Gdata_paz$Progression
Gdata_paz$Progression1
Gdata_paz$ProgressionStructure1
Gdata_paz$ProgressionStructure
Gdata_paz
Gdata_paz$Age # variabile tempo!
Gdata_paz$age65
Gdata_paz$visualizationofON
Gdata_paz$MAP
Gdata_paz$FieldsComment
Gdata_paz$Field2
Gdata_paz$acuity
#MODIFICHE STRUTTURALI (riguardo al nervo ottico)
#RNFL
Gdata_paz$RNFL_average
Gdata_paz$RNFL_cross_sectinal_area
Gdata_paz$RNFL_Multi_G_center
Gdata_paz$RNFL_Multi_Nasal
Gdata_paz$RNFL_Multi_Temp
Gdata_paz$RNFL_Multi_NI
Gdata_paz$RNFL_Multi_NS
Gdata_paz$RNFL_Multi_TI
Gdata_paz$RNFL_Multi_TS
Gdata_paz$RNFL_quad_Inf
Gdata_paz$RNFL_quad_nasal
Gdata_paz$RNFL_quad_Sup
Gdata_paz$RNFL_quad_temp
Gdata_paz$RNFL_thickness_superior
Gdata_paz$RNFL_thickness_inferior
Gdata_paz$RNFL_thickness_nasal
Gdata_paz$RNFL_thickness_temporal
Gdata_paz$OCT_RNFL_Signal_Strength
Gdata_paz$mean_RNFL_thickness
#RIM
Gdata_paz$Rim_area
Gdata_paz$RimArea
Gdata_paz$rim_volume
#CUP DISK
cup_disk_horiz_ratio
cup_disk_vert_ratio
linear_cup_disc_ratio
#MODIFICHE FUNZIONALI
Gdata_paz$MD # Deviazione media CAMPO VISIVO!
Gdata_paz$PSD #Pattern Standard Deviation, nel perimetro Humphrey
pie <- p + coord_polar("y", start=0)
pie <- p + coord_polar("y", start=0)
pie
p=ggplot(data= Gdata, aes(family_history, fill=family_history  ) )
p +  geom_bar()+
theme(legend.position = "none", axis.text.x  = element_text(angle=0.45, hjust=1, vjust=0.9))
pie <- p + coord_polar("y", start=0)
pie
pie <- p + coord_polar( start=0)
pie
p +  geom_bar()+
theme(legend.position = "none", axis.text.x  = element_text(angle=0.45, hjust=1, vjust=0.9))
bp=p +  geom_bar()+
theme(legend.position = "none", axis.text.x  = element_text(angle=0.45, hjust=1, vjust=0.9))
pie <- bp + coord_polar( start=0)
pie
p=ggplot(data= Gdata, aes(family_history, fill=family_history  ) )
bp=p +  geom_bar()
pie <- bp + coord_polar( start=0)
pie
p=ggplot(data= Gdata, aes(family_history, fill=family_history  ) ) +  geom_bar()
pie <- p + coord_polar( start=0)
pie
p=ggplot(data= Gdata, aes(family_history, fill=family_history  ) ) +  geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar( start=0)
pie
p=ggplot(data= Gdata, aes(y=family_history, fill=family_history  ) ) +  geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar( start=0)
pie
p=ggplot(data= Gdata, aes(x="",y=family_history, fill=family_history  ) ) +  geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar( start=0)
pie
p=ggplot(data= Gdata, aes(x="",y=family_history, fill=family_history  ) ) +  geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar("y", start=0)
pie
p=ggplot(data= Gdata, aes(x="",y=family_history, fill=family_history  ) ) +  geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar("y", start=0)
pie
family_history
p=ggplot(data= Gdata, aes(x="",y=family_history, fill=family_history  ) ) +  geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar("y", start=0)
pie
p=ggplot(data= Gdata, aes(x="",y=family_history, fill=family_history  ) ) +
geom_bar(width = 1, stat = "identity")
p
pie <- p + coord_polar("y", start=0)
pie
p=ggplot(data= Gdata, aes(x="",y=family_history, fill=family_history  ) ) +
geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar("y")
pie
p=ggplot(data= Gdata, aes(x="",y=factor(family_history), fill=family_history  ) ) +
geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar("y")
pie
p=ggplot(data= Gdata, aes(x="",y=factor(family_history), fill=family_history  ) ) +
geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar("y")
pie
p=ggplot(data= Gdata, aes(x="",y=factor(family_history), fill=family_history  ) ) +
geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar("y")
#pie
pie + scale_fill_brewer("Blues") + blank_theme +
theme(axis.text.x=element_blank())+
geom_text(aes(y = value/3 + c(0, cumsum(value)[-length(value)]),
label = percent(value/100)), size=5)
p=ggplot(data= Gdata, aes(x="",y=factor(family_history), fill=family_history  ) ) +
geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar("y")
#pie
pie + scale_fill_brewer("Blues") + #blank_theme +
theme(axis.text.x=element_blank())+
geom_text(aes(y = value/3 + c(0, cumsum(value)[-length(value)]),
label = percent(value/100)), size=5)
p=ggplot(data= Gdata, aes(x="",y=factor(family_history), fill=family_history  ) ) +
geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar("y")
#pie
pie + scale_fill_brewer("Blues") + #blank_theme +
theme(axis.text.x=element_blank())+
geom_text(#aes(y = value/3 + c(0, cumsum(value)[-length(value)]),
label = percent(family_history/100)), size=5)
p=ggplot(data= Gdata, aes(x="",y=factor(family_history), fill=family_history  ) ) +
geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar("y")
#pie
pie + scale_fill_brewer("Blues") + #blank_theme +
theme(axis.text.x=element_blank())+
geom_text(aes(#y = value/3 + c(0, cumsum(value)[-length(value)]),
label = percent(family_history/100)), size=5)
p=ggplot(data= Gdata, aes(x="",y=factor(family_history), fill=family_history  ) ) +
geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar("y")
#pie
library(scales)
pie + scale_fill_brewer("Blues") + #blank_theme +
theme(axis.text.x=element_blank())+
geom_text(aes(#y = value/3 + c(0, cumsum(value)[-length(value)]),
label = percent(family_history/100)), size=5)
p=ggplot(data= Gdata, aes(x="",y=factor(family_history), fill=family_history  ) ) +
geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar("y")
#pie
library(scales)
pie + scale_fill_brewer("Blues") + #blank_theme +
theme(axis.text.x=element_blank())+
geom_text(aes(y = family_history/3 + c(0, cumsum(family_history)[-length(family_history)]),
label = percent(family_history/100)), size=5)
p=ggplot(data= Gdata, aes(x="",y=factor(family_history), fill=family_history  ) ) +
geom_bar(width = 1, stat = "identity")
pie <- p + coord_polar("y")
#pie
library(scales)
pie + scale_fill_brewer("Blues") + #blank_theme +
theme(axis.text.x=element_blank())#+
#geom_text(aes(y = family_history/3 + c(0, cumsum(family_history)[-length(family_history)]),
#   label = percent(family_history/100)), size=5)
ggplot(data= Gdata, aes(x=factor(family_history), fill=family_history  ) ) +
geom_bar(width = 1)+ coord_polar("y")
ggplot(data= Gdata, aes(x=factor(family_history), fill=family_history  ) ) +
geom_bar(width = 1) +
coord_polar("x")
bar <- ggplot(data= Gdata, aes(x = factor(1), fill = factor(Qfamily_history))) + geom_bar(width = 1)
bar
bar <- ggplot(data= Gdata, aes(x = factor(1), fill = factor(family_history))) + geom_bar(width = 1)
bar
pie <- bar + coord_polar(theta = "y")
pie
bar <- ggplot(data= Gdata, aes(x = factor(1), fill = factor(family_history))) + geom_bar(width = 1)
pie <- bar + coord_polar(theta = "y")
pie
bar <- ggplot(data= Gdata, aes(x = factor(1), fill = family_history)) + geom_bar(width = 1)
pie <- bar + coord_polar(theta = "y")
pie
bar <- ggplot(data= Gdata, aes(x = factor(1), fill = family_history)) + geom_bar(width = 1)
pie <- bar + coord_polar(theta = "y") + theme_void()
pie
pie <- bar + coord_polar(theta = "y") + theme_void() +
geom_text(aes(y=labPos, label=scales::percent(value)))
pie
pie <- bar + coord_polar(theta = "y") + theme_void() +
geom_text(aes(y=family_history, label=scales::percent(value)))
pie
pie <- bar + coord_polar(theta = "y") + theme_void() +
geom_text(aes(y=family_history, label=scales::percent(family_history)))
pie
pie <- bar + coord_polar(theta = "y") + theme_void() +
geom_text(aes(y=family_history, label=scales::percent(count(family_history))))
pie
pie <- bar + coord_polar(theta = "y") + theme_void() +
geom_text(aes(y=family_history, label=scales::percent(x)))
pie
pie <- bar + coord_polar(theta = "y") + theme_void() +
geom_text(aes(y=family_history, label=scales::percent(y)))
pie
table(Patient)
table(family_history)
bar <- ggplot(data= Gdata, aes(x = factor(1), fill = family_history)) + geom_bar(width = 1)
counts=table(family_history)
pie <- bar + coord_polar(theta = "y") + theme_void() +
geom_text(aes(y=family_history, label=scales::percent(y)))
pie
bar <- ggplot(data= Gdata, aes(x = factor(1), fill = family_history)) + geom_bar(width = 1)
counts=table(family_history)
pie <- bar + coord_polar(theta = "y") + theme_void() #+
#geom_text(aes(y=family_history, label=scales::percent(y)))
pie
pie <- bar + coord_polar(theta = "y") + theme_void() +
geom_text(aes(y=family_history, label=scales::percent(counts)))
pie
bar <- ggplot(data= Gdata, aes(x = factor(1), fill = family_history)) + geom_bar(width = 1)
counts=as.numeric(table(family_history))
pie <- bar + coord_polar(theta = "y") + theme_void() +
geom_text(aes(y=family_history, label=scales::percent(counts)))
pie
bar <- ggplot(data= Gdata, aes(x = factor(1), fill = family_history)) + geom_bar(width = 1)
counts=as.numeric(table(family_history))
pie <- bar + coord_polar(theta = "y") + theme_void() #+
#geom_text(aes(y=family_history, label=scales::percent(counts)))
pie
p <- ggplot(data = Gdata[!is.na(Rim_area)& time<2,], aes(x = time, y = Rim_area,  color= factor(Patient) )  )
p + geom_line() + geom_point() +
geom_smooth(method = lm, color="black")
## define base for the graphs and store in object 'p'
p <- ggplot(data = Gdata[!is.na(Rim_area),], aes(x = time, y = Rim_area,  color= factor(Patient) )  )
p + geom_line() + geom_point() +
geom_smooth(method = lm, color="black")
p <- ggplot(data = Gdata[!is.na(Rim_area)& time<2,], aes(x = time, y = Rim_area,  color= factor(Patient) )  )
p + geom_line() + geom_point() +
geom_smooth(method = lm, color="black")
## define base for the graphs and store in object 'p'
p <- ggplot(data = Gdata[!is.na(RNFL_average),], aes(x = time, y = RNFL_average,  color= factor(Patient) )  )
p + geom_line() + geom_point() +
geom_smooth(method = lm, color="black")
p <- ggplot(data = Gdata[!is.na(RNFL_average)& time<2,], aes(x = time, y = RNFL_average,  color= factor(Patient) )  )
p + geom_line() + geom_point() +
geom_smooth(method = lm, color="black")
## define base for the graphs and store in object 'p'
p <- ggplot(data = Gdata[!is.na(RNFL_average),], aes(x = time, y = RNFL_average,  color= factor(Patient) )  )
p + geom_line() + geom_point() +
geom_smooth(method = lm, color="black")
p <- ggplot(data = Gdata[!is.na(RNFL_average)& time<2,], aes(x = time, y = RNFL_average,  color= factor(Patient) )  )
p + geom_line() + geom_point() +
geom_smooth(method = lm, color="black")
p <- ggplot(data = Gdata[!is.na(RNFL_average)& time<3,], aes(x = time, y = RNFL_average,  color= factor(Patient) )  )
p + geom_line() + geom_point() +
geom_smooth(method = lm, color="black")
## define base for the graphs and store in object 'p'
p <- ggplot(data = Gdata[!is.na(RNFL_average),], aes(x = time, y = RNFL_average,  color= factor(Patient) )  )
p + geom_line() + geom_point() +
geom_smooth(method = lm, color="black")
p <- ggplot(data = Gdata[!is.na(RNFL_average)& time<1.5,], aes(x = time, y = RNFL_average,  color= factor(Patient) )  )
p + geom_line() + geom_point() +
geom_smooth(method = lm, color="black")
p <- ggplot(data = Gdata[!is.na(RNFL_average)& time<2,], aes(x = time, y = RNFL_average,  color= factor(Patient) )  )
p + geom_line() + geom_point() +
geom_smooth(method = lm, color="black")
## define base for the graphs and store in object 'p'
p <- ggplot(data = Gdata[!is.na(cup_disk_vert_ratio),], aes(x = time, y = cup_disk_vert_ratio,  color= factor(Patient) )  )
p + geom_line() + geom_point() +
geom_smooth(method = lm, color="black")
